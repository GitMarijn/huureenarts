{"ast":null,"code":"var _jsxFileName = \"/Users/marijnvanloo/Documents/Projects .nosync/huureenarts.nl_react/client/src/components/DynamicScrollToTop.js\";\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nconst DynamicScrollToTop = props => {\n  useEffect(() => {\n    console.log(props); // Keep default behavior of restoring scroll position when user:\n    // - clicked back button\n    // - clicked on a link that programmatically calls `history.goBack()`\n    // - manually changed the URL in the address bar (here we might want\n    // to scroll to top, but we can't differentiate it from the others)\n\n    if (props.history.action === \"POP\") {\n      return;\n    } // In all other cases, check fragment/scroll to top\n\n\n    let hash = props.location.hash;\n\n    if (hash) {\n      let element = document.querySelector(hash);\n\n      if (element) {\n        element.scrollIntoView({\n          block: \"start\",\n          behavior: \"smooth\"\n        });\n      }\n    } else {\n      window.scrollTo(0, 0);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default withRouter(DynamicScrollToTop);","map":{"version":3,"sources":["/Users/marijnvanloo/Documents/Projects .nosync/huureenarts.nl_react/client/src/components/DynamicScrollToTop.js"],"names":["React","useEffect","withRouter","DynamicScrollToTop","props","console","log","history","action","hash","location","element","document","querySelector","scrollIntoView","block","behavior","window","scrollTo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpCH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADc,CAEd;AACA;AACA;AACA;AACA;;AACA,QAAIA,KAAK,CAACG,OAAN,CAAcC,MAAd,KAAyB,KAA7B,EAAoC;AAClC;AACD,KATa,CAUd;;;AACA,QAAIC,IAAI,GAAGL,KAAK,CAACM,QAAN,CAAeD,IAA1B;;AACA,QAAIA,IAAJ,EAAU;AACR,UAAIE,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuBJ,IAAvB,CAAd;;AACA,UAAIE,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACG,cAAR,CAAuB;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAvB;AACD;AACF,KALD,MAKO;AACLC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;AACF,GApBQ,CAAT;AAsBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxBD;;AA0BA,eAAehB,UAAU,CAACC,kBAAD,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nconst DynamicScrollToTop = (props) => {\n  useEffect(() => {\n    console.log(props);\n    // Keep default behavior of restoring scroll position when user:\n    // - clicked back button\n    // - clicked on a link that programmatically calls `history.goBack()`\n    // - manually changed the URL in the address bar (here we might want\n    // to scroll to top, but we can't differentiate it from the others)\n    if (props.history.action === \"POP\") {\n      return;\n    }\n    // In all other cases, check fragment/scroll to top\n    let hash = props.location.hash;\n    if (hash) {\n      let element = document.querySelector(hash);\n      if (element) {\n        element.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n      }\n    } else {\n      window.scrollTo(0, 0);\n    }\n  });\n\n  return <div />;\n};\n\nexport default withRouter(DynamicScrollToTop);\n"]},"metadata":{},"sourceType":"module"}